{"version":3,"sources":["images/logo.svg","components/Header.js","constexts/CurrentUserContext.js","components/Card.js","images/spinner.gif","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Login.js","components/Register.js","utils/auth.js","components/ProtectedRoute.js","images/fail.svg","images/success.svg","components/InfoTooltip.js","components/DeleteCardPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","alt","mail","to","route","type","onClick","title","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","cardDeleteButtonClassName","link","name","onCardClick","onDeleteCard","onCardLike","Main","onEditAvatar","spinner","spin","avatar","onEditProfile","about","onAddPlace","cards","map","id","length","Footer","lang","ImagePopup","isOpen","onOverlayClick","onClose","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","console","log","status","fetch","then","_handleRes","data","method","body","JSON","stringify","profile_name","profile_job","avatar_link","authorization","PopupWithForm","onMouseDown","form","onSubmit","children","buttonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","placeholder","minLength","maxLength","onChange","target","value","required","EditAvatarPopup","avatarRef","useRef","current","ref","AddPlacePopup","setTitle","setLink","Login","email","setEmail","password","setPassword","onLogin","autoComplete","Register","onRegister","BASE_URL","checkRes","ProtectedRoute","Component","component","isLogged","InfoTooltip","image","DeleteCardPopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","isLoggedIn","setIsLoggedIn","mailName","setMailName","popupImage","setPopupImage","popupTitle","setPopupTitle","infoTooltip","setInfoTooltip","setSpinner","navigate","useNavigate","handleInfoTooltip","closeOverlayClick","classList","contains","closeAllPopups","jwt","localStorage","getItem","auth","catch","err","all","getUserInfo","getInitialCards","user","finally","handleEscape","key","document","addEventListener","removeEventListener","Provider","path","element","setItem","token","fail","success","exact","removeItem","deleteCardLike","newCard","state","c","addCardLike","patchUserInfo","newUser","updateAvatar","newAvatar","postNewCard","deleteCard","items","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.cc83d7dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import logo from \"../images/logo.svg\";\r\nimport {Link} from \"react-router-dom\";\r\nfunction Header(props) {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} alt=\"Логотип Место\" className=\"header__logo\"/>\r\n            <nav className=\"header__nav\">\r\n                <p className=\"header__text\">{props.mail}</p>\r\n                <Link to={props.route} type=\"button\" className=\"header__button\" onClick={props.onClick}>{props.title}</Link>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext()","import React from \"react\";\r\nimport {CurrentUserContext} from \"../constexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext)\r\n    const isOwn = props.card.owner._id === currentUser._id\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id)\r\n\r\n    const cardLikeButtonClassName = (`element__like ${isLiked ? 'element__like_active' : ''}`)\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `element__delete ${isOwn ? 'element__delete_visible' : 'element__delete_hidden'}`\r\n    );\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card)\r\n    }\r\n\r\n    function handleLike() {\r\n        props.onCardLike(props.card)\r\n    }\r\n\r\n    function handleDelete() {\r\n        props.onDeleteCard(props.card)\r\n    }\r\n\r\n    return(\r\n        <article className=\"element\">\r\n            <img src={props.link} alt={props.name} className=\"element__image\" onClick={handleClick}/>\r\n            <button className={cardDeleteButtonClassName} onClick={handleDelete}/>\r\n            <div className=\"element__content\">\r\n                <h2 className=\"element__title\">{props.name}</h2>\r\n                <div className=\"element__like-container\">\r\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLike}/>\r\n                    <p className=\"element__like-count\">{props.likes}</p>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Card","export default __webpack_public_path__ + \"static/media/spinner.07a3b34f.gif\";","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport { CurrentUserContext } from \"../constexts/CurrentUserContext\";\r\nimport spin from \"../images/spinner.gif\"\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext)\r\n    return (\r\n        <main>\r\n            <section className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <button type=\"button\" className=\"profile__edit-avatar\" onClick={props.onEditAvatar}>\r\n                        <img src={props.spinner ? spin : currentUser.avatar} alt={currentUser.name}\r\n                            className=\"profile__avatar\"\r\n                        />\r\n                    </button>\r\n                    <div className=\"profile__info\">\r\n                        <div className=\"profile__title-container\">\r\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n                            <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}/>\r\n                        </div>\r\n                        <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}/>\r\n            </section>\r\n\r\n            <section className=\"elements\">\r\n                {props.cards.map((card, id) => (\r\n                <Card\r\n                key={id}\r\n                card={card}\r\n                link={card.link}\r\n                name={card.name}\r\n                likes={card.likes.length}\r\n                onCardClick={props.onCardClick}\r\n                onCardLike={props.onCardLike}\r\n                onDeleteCard={props.onDeleteCard}\r\n                />\r\n                ))}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","function Footer() {\r\n    return(\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\" lang=\"en\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","function ImagePopup(props) {\r\n    return (\r\n        <div className={`popup popup_theme_dark popup_form_fullscreen ${props.isOpen ? 'popup_opened' : ''}`} onClick={props.onOverlayClick}>\r\n            <div className=\"popup__container popup__container_size_l\">\r\n                <button type=\"button\" className=\"popup__button-close\" onClick={props.onClose}/>\r\n                <img src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''} className=\"popup__image\"/>\r\n                <p className=\"popup__description\">{props.card ? props.card.name : ''}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl\n    this._headers = options.headers\n  }\n\n  _handleRes(res) {\n    if (res.ok) {\n      return res.json()\n    }\n    return Promise.reject(console.log(`Ошибка: ${res.status}`))\n  }\n\n  //запрос пользовательских данных\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then((res) => {\n        return this._handleRes(res)\n      })\n  }\n\n  //запрос карточек\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then((res) => {\n        return this._handleRes(res)\n      })\n  }\n\n  //отправка новых данных профиля\n  patchUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.profile_name,\n        about: data.profile_job\n      })\n    })\n      .then((res) => {\n        return this._handleRes(res)\n      })\n  }\n\n  //отправка создания новой карточки\n  postNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then((res) => {\n        return this._handleRes(res)\n      })\n  }\n\n  //запрос удаления карточки\n  deleteCard(data) {\n    return fetch(`${this._baseUrl}/cards/${data._id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then((res) => {\n        return this._handleRes(res)\n      })\n  }\n\n  //постановка лайка\n  addCardLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n      .then((res) => {\n        return this._handleRes(res)\n      });\n  }\n\n  //удаление лайка\n  deleteCardLike(id) {\n    return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then((res) => {\n        return this._handleRes(res)\n      })\n  }\n\n  updateAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar_link\n      })\n    })\n      .then((res) => {\n        return this._handleRes(res)\n      })\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-29',\n  headers: {\n    authorization: '49cf51ee-b559-465c-b78a-86fb26662a6f',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default api\n","function PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_form_${props.name} ${props.isOpen ? `popup_opened`: \"\"}`} onMouseDown={props.onOverlayClick}>\r\n            <div className=\"popup__container\">\r\n                <button type=\"button\" className=\"popup__button-close\" onClick={props.onClose}/>\r\n                <form name={props.form} className=\"popup__form\" onSubmit={props.onSubmit}>\r\n                    <h2 className=\"popup__title\">{props.title}</h2>\r\n                    {props.children}\r\n                <button type=\"submit\" className=\"popup__submit\">{props.buttonText}</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from \"react\";\r\nimport {CurrentUserContext} from \"../constexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext)\r\n    const [name, setName] = React.useState('')\r\n    const [description, setDescription] = React.useState('')\r\n\r\n    function changeName(evt) {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    function changeDescription(evt) {\r\n        setDescription(evt.target.value)\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n\r\n        props.onSubmit({\r\n            profile_name: name,\r\n            profile_job: description\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.isOpen) {\r\n            setName(currentUser.name)\r\n            setDescription(currentUser.about)\r\n        }\r\n    }, [props.isOpen, currentUser])\r\n\r\n    return(\r\n        <PopupWithForm\r\n            onSubmit={handleSubmit}\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            form={'edit_profile'}\r\n            title={'Редактировать профиль'}\r\n            name={'edit'}\r\n            buttonText={'Сохранить'}\r\n            onOverlayClick={props.onOverlayClick}\r\n            >\r\n            <input\r\n                type=\"text\"\r\n                name=\"profile_name\"\r\n                className=\"popup__text\"\r\n                id=\"profile_name\"\r\n                placeholder=\"Имя\"\r\n                minLength=\"2\"\r\n                maxLength=\"40\"\r\n                onChange={changeName}\r\n                required\r\n                value={name}\r\n            />\r\n            <span className=\"popup__text-error\" id=\"profile_name-error\"/>\r\n            <input\r\n                type=\"text\"\r\n                name=\"profile_job\"\r\n                className=\"popup__text\"\r\n                id=\"profile_job\"\r\n                placeholder=\"Профессиональная деятельность\"\r\n                minLength=\"2\"\r\n                maxLength=\"200\"\r\n                onChange={changeDescription}\r\n                required\r\n                value={description}\r\n            />\r\n            <span className=\"popup__text-error\" id=\"profile_job-error\"/>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from \"react\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const avatarRef = React.useRef()\r\n\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n\r\n        props.onSubmit({\r\n            avatar_link: avatarRef.current.value\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        avatarRef.current.value = ''\r\n    }, [props.isOpen])\r\n\r\n    return(\r\n        <PopupWithForm\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            form={'edit_avatar'}\r\n            title={'Обновить аватар'}\r\n            name={'avatar'}\r\n            buttonText={'Сохранить'}\r\n            onSubmit={handleSubmit}\r\n            onOverlayClick={props.onOverlayClick}\r\n            >\r\n            <input\r\n                ref={avatarRef}\r\n                type=\"url\"\r\n                name=\"avatar_link\"\r\n                className=\"popup__text\"\r\n                id=\"avatar_link\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                required\r\n            />\r\n            <span className=\"popup__text-error\" id=\"avatar_link-error\"/>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from \"react\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [title, setTitle] = React.useState('')\r\n    const [link, setLink] = React.useState('')\r\n\r\n    function handleAddTitle(evt) {\r\n        setTitle(evt.target.value)\r\n    }\r\n    function handleAddPhoto(evt) {\r\n        setLink(evt.target.value)\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n\r\n        props.onSubmit({\r\n            name: title,\r\n            link: link\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.isOpen) {\r\n            setTitle('')\r\n            setLink('')\r\n        }\r\n    },[props.isOpen])\r\n\r\n    return(\r\n        <PopupWithForm\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            form={'add_mesto'}\r\n            title={'Новое место'}\r\n            name={'add'}\r\n            buttonText={'Сохранить'}\r\n            onSubmit={handleSubmit}\r\n            onOverlayClick={props.onOverlayClick}\r\n            >\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"mesto_title\"\r\n                className=\"popup__text\"\r\n                placeholder=\"Название\"\r\n                minLength=\"2\"\r\n                maxLength=\"30\"\r\n                value={title}\r\n                required\r\n                onChange={handleAddTitle}\r\n            />\r\n            <span className=\"popup__text-error\" id=\"mesto_title-error\"/>\r\n            <input\r\n                type=\"url\"\r\n                name=\"link\"\r\n                className=\"popup__text\"\r\n                id=\"mesto_link\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                required\r\n                onChange={handleAddPhoto}\r\n                value={link}\r\n            />\r\n            <span className=\"popup__text-error\" id=\"mesto_link-error\"/>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup","import {useState} from \"react\";\r\n\r\nfunction Login(props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    function handleMailInput(evt) {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    function handlePasswordInput(evt) {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n        props.onLogin(email, password)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"login\">\r\n                <h2 className=\"login__title\">Вход</h2>\r\n                <form className=\"login__form\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"login__input\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleMailInput}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"login__input\"\r\n                        placeholder=\"Пароль\"\r\n                        autoComplete=\"on\"\r\n                        onChange={handlePasswordInput}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"login__button\">Войти</button>\r\n                </form>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import {Link} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\nfunction Register(props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    function handleMailInput(evt) {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    function handlePasswordInput(evt) {\r\n        setPassword(evt.target.value)\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n        props.onRegister(email, password)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"login\">\r\n                <h2 className=\"login__title\">Регистрация</h2>\r\n                <form className=\"login__form\" onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"login__input\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleMailInput}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"login__input\"\r\n                        placeholder=\"Пароль\"\r\n                        autoComplete=\"on\"\r\n                        onChange={handlePasswordInput}\r\n                    />\r\n                    <button type=\"submit\" className=\"login__button\">Зарегистрироваться</button>\r\n                </form>\r\n                <p className=\"login__text\">Уже зарегистрированы? <Link to=\"/sign-in\" className=\"login__link\">Войти</Link></p>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","export const BASE_URL = 'https://auth.nomoreparties.co'\r\n\r\nexport function register(email, password) {\r\n    return fetch(`${BASE_URL}/signup`,{\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({email, password})\r\n    })\r\n        .then(checkRes)\r\n}\r\n\r\nexport function login(email, password) {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({email, password})\r\n    })\r\n        .then(checkRes)\r\n}\r\n\r\nexport function checkToken(jwt) {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\" : `Bearer ${jwt}`\r\n        }\r\n    })\r\n        .then(checkRes)\r\n}\r\n\r\nfunction checkRes(res) {\r\n    if (res.ok) {\r\n        return res.json()\r\n    }\r\n    return Promise.reject(res.status)\r\n}","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nfunction ProtectedRoute({component: Component ,...props}) {\r\n    return (\r\n        props.isLogged ? <Component {...props} /> : <Navigate to=\"/sign-in\" />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","export default __webpack_public_path__ + \"static/media/fail.df8eddf6.svg\";","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","function InfoTooltip(props) {\r\n    return (\r\n        <div className={`popup ${props.isOpen ? `popup_opened`: \"\"}`} onClick={props.onOverlayClick}>\r\n            <div className=\"popup__container popup__container_size_m\">\r\n                <button type=\"button\" className=\"popup__button-close\" onClick={props.onClose}/>\r\n                <img src={props.image} alt={props.title} className=\"popup__picture\"/>\r\n                <h2 className=\"popup__title popup__title_theme_auth\">{props.title}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip","import PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction DeleteCardPopup(props) {\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n\r\n        props.onSubmit(props.card)\r\n        props.onClose()\r\n    }\r\n\r\n    return(\r\n        <PopupWithForm\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            title={'Подтвердите удаление'}\r\n            buttonText={'Удалить'}\r\n            name={'delete'}\r\n            onSubmit={handleSubmit}\r\n            onOverlayClick={props.onOverlayClick}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DeleteCardPopup","import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport {useEffect, useState} from \"react\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../constexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport {Routes, Route, Navigate, useNavigate} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport * as auth from \"../utils/auth\"\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport fail from \"../images/fail.svg\"\nimport success from \"../images/success.svg\"\nimport InfoTooltip from \"./InfoTooltip\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\n\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n    const [isImagePopupOpen, setIsImagePopupOpen] = useState(false)\n    const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false)\n    const [selectedCard, setSelectedCard] = useState(null)\n    const [currentUser, setCurrentUser] = useState({})\n    const [cards, setCards] = useState([])\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const [mailName, setMailName] = useState(null)\n    const [popupImage, setPopupImage] = useState('')\n    const [popupTitle, setPopupTitle] = useState('')\n    const [infoTooltip, setInfoTooltip] = useState(false)\n    const [spinner, setSpinner] = useState(false)\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        const jwt = localStorage.getItem(\"jwt\")\n        if (jwt) {\n            auth.checkToken(jwt)\n                .then((res) => {\n                    if (res) {\n                        setIsLoggedIn(true)\n                        setMailName(res.data.email)\n                    }\n                })\n                .catch((err) => {\n                    console.log(`Не удалось получить токен: ${err}`)\n                })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (isLoggedIn === true) {\n            navigate('/')\n        }\n    }, [isLoggedIn, navigate])\n\n    function onRegister(email, password) {\n        auth.register(email, password)\n            .then(() => {\n                setPopupImage(success)\n                setPopupTitle(\"Вы успешно зарегистрировались!\")\n                navigate('/sign-in')\n            })\n            .catch(() => {\n                setPopupImage(fail)\n                setPopupTitle('Что-то пошло не так! Попробуйте ещё раз.')\n            })\n            .finally(handleInfoTooltip)\n    }\n\n    function onLogin(email, password) {\n        auth.login(email, password)\n            .then((res) => {\n                localStorage.setItem('jwt', res.token)\n                setIsLoggedIn(true)\n                setMailName(email)\n                navigate('/')\n            })\n            .catch(() => {\n                setPopupImage(fail)\n                setPopupTitle('Не верные имя пользователя или пароль.')\n                handleInfoTooltip()\n            })\n    }\n\n    useEffect(() => {\n        setSpinner(true)\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, cards]) => {\n                setCurrentUser(user)\n                setCards(cards)\n            })\n            .catch((err) => {\n                console.log(`Ошибка загрузки данных: ${err}`)\n            })\n            .finally(() => setSpinner(false))\n    },[])\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id)\n\n        if (!isLiked) {\n            api.addCardLike(card._id)\n                .then((newCard) => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n                })\n                .catch((err) => {\n                    console.log(`Не получилось поставить лайк: ${err}`)\n                })\n        } else {\n            api.deleteCardLike(card._id)\n                .then((newCard) => {\n                    setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n                })\n                .catch((err) => {\n                    console.log(`Не получилось дизлайкнуть: ${err}`)\n                })\n        }\n    }\n\n    function handleDeleteCard(card) {\n        api.deleteCard(card)\n            .then(() => {\n                setCards((items) => items.filter((c) => c._id !== card._id && c))\n            })\n            .catch((err) => {\n                console.log(`Ошибка удаления карточки: ${err}`)\n            })\n    }\n\n    function handleUpdateUser(data) {\n        api.patchUserInfo(data)\n            .then((newUser) => {\n                setCurrentUser(newUser)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(`Не удалось обновить профиль: ${err}`)\n            })\n    }\n\n    function handleAvatarUpdate(data) {\n        api.updateAvatar(data)\n            .then((newAvatar) => {\n              setCurrentUser(newAvatar)\n              closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(`Не удалось обновить аватар: ${err}`)\n            })\n    }\n\n    function handleAddPlaceSubmit(data) {\n        api.postNewCard(data)\n            .then((newCard) => {\n                setCards([newCard, ...cards])\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(`Не удалось добавить карточку: ${err}`)\n            })\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n        setIsImagePopupOpen(true)\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function handleInfoTooltip() {\n        setInfoTooltip(true)\n    }\n\n    function handleDeleteCardClick(card) {\n        setSelectedCard(card)\n        setIsDeletePopupOpen(true)\n    }\n\n    function closeOverlayClick(evt) {\n        if (evt.target.classList.contains('popup_opened')) {\n            closeAllPopups()\n        }\n    }\n\n    useEffect(() => {\n        if (isAddPlacePopupOpen || isEditProfilePopupOpen || isEditAvatarPopupOpen || selectedCard || infoTooltip) {\n            function handleEscape(evt) {\n                if (evt.key === \"Escape\") {\n                    closeAllPopups()\n                }\n            }\n\n            document.addEventListener('keydown', handleEscape)\n\n            return () => {\n                document.removeEventListener('keydown', handleEscape)\n            }\n        }\n    }, [isAddPlacePopupOpen, isEditProfilePopupOpen, isEditAvatarPopupOpen, selectedCard, infoTooltip])\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false)\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setIsImagePopupOpen(false)\n        setInfoTooltip(false)\n        setIsDeletePopupOpen(false)\n    }\n\n    function onSignOut() {\n        setIsLoggedIn(false)\n        setMailName(null)\n        navigate('/sign-in')\n        localStorage.removeItem(\"jwt\")\n    }\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"container\">\n              <Routes>\n                  <Route path=\"/sign-in\" element={\n                      <>\n                          <Header title=\"Регистрация\" route=\"/sign-up\" />\n                          <Login onLogin={onLogin} />\n                      </>\n\n                  }\n                  />\n                  <Route path=\"/sign-up\" element={\n                      <>\n                          <Header title=\"Войти\" route=\"/sign-in\"/>\n                          <Register onRegister={onRegister} />\n                      </>\n\n                  }\n                  />\n                  <Route exact path=\"/\" element={\n                      <>\n                          <Header title=\"Выйти\" mail={mailName} onClick={onSignOut} route=''/>\n                          <ProtectedRoute\n                              component={Main}\n                              isLogged={isLoggedIn}\n                              onEditAvatar={handleEditAvatarClick}\n                              onEditProfile={handleEditProfileClick}\n                              onAddPlace={handleAddPlaceClick}\n                              onCardClick={handleCardClick}\n                              onDeleteCard={handleDeleteCardClick}\n                              cards={cards}\n                              spinner={spinner}\n                              onCardLike={handleCardLike}\n                          />\n                          <Footer/>\n                      </>\n                  }\n                  />\n                  <Route path=\"*\" element={<Navigate to={isLoggedIn ? \"/\" : \"/sign-in\"}/>} />\n              </Routes>\n\n          <ImagePopup\n              isOpen={isImagePopupOpen}\n              card={selectedCard}\n              onClose={closeAllPopups}\n              onOverlayClick={closeOverlayClick}\n          />\n          <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onSubmit={handleUpdateUser}\n              onOverlayClick={closeOverlayClick}\n          />\n          <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onSubmit={handleAvatarUpdate}\n              onOverlayClick={closeOverlayClick}\n          />\n          <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onSubmit={handleAddPlaceSubmit}\n              onOverlayClick={closeOverlayClick}\n          />\n          <InfoTooltip\n              isOpen={infoTooltip}\n              onClose={closeAllPopups}\n              onOverlayClick={closeOverlayClick}\n              image={popupImage}\n              title={popupTitle}\n          />\n\n          <DeleteCardPopup\n              isOpen={isDeletePopupOpen}\n              onClose={closeAllPopups}\n              onOverlayClick={closeOverlayClick}\n              onSubmit={handleDeleteCard}\n              card={selectedCard}\n          />\n      </div>\n      </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter basename='/react-mesto-auth'>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}